import {useMutation} from "@tanstack/react-query";import CreateEnvelopeDto from "../../api/create.envelope.dto.ts";import {EnvelopeService} from "../../api";import CreateEnvelopeResponse from "../../api/create.envelope.response.ts";import {message} from "antd";import {AxiosError} from "axios";export default function useCreateEnvelope() {  const createEnvelope = async (data: CreateEnvelopeDto): Promise<CreateEnvelopeResponse> => {    const envelopeService = new EnvelopeService({      url: import.meta.env.VITE_API_URL,      port: import.meta.env.VITE_API_PORT ? parseInt(import.meta.env.VITE_API_PORT) : 3000,    });    const response = await envelopeService.create(data);    return response.data;  }  return useMutation({    mutationFn: createEnvelope,    onSuccess: () => {      message.success(`Envelope created successfully!`);    },    onError: (error: AxiosError) => {      const {response} = error;      const {status} = response;      if (status === 400) {        message.error('Envelope with this name already!');        return;      }      message.error('Failed to create envelope!')    }  });}